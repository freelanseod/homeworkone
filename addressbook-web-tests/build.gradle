plugins {
    id 'java'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

configurations {
    agent
}

dependencies {
    testCompile 'org.testng:testng:6.14.3'
    implementation 'org.seleniumhq.selenium:selenium-java:3.9.1'
    testCompile 'org.hamcrest:hamcrest:2.2'
    implementation 'com.beust:jcommander:1.78'
    implementation 'com.thoughtworks.xstream:xstream:1.4.15'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'ch.qos.logback:logback-classic:1.2.3'
    implementation 'mysql:mysql-connector-java:8.0.23'
    implementation group: 'org.hibernate', name: 'hibernate-core', version: '5.4.28.Final'
    agent "org.aspectj:aspectjweaver:1.8.0"
    compile "ru.yandex.qatools.allure:allure-testng-adaptor:1.4.0.RC4"
    implementation 'org.robotframework:robotframework:3.2.2'
    implementation 'io.cucumber:cucumber-java:6.10.0'
    implementation 'io.cucumber:cucumber-testng:6.10.0'
    implementation group: 'com.google.guava', name: 'guava', version: '29.0-jre'
}

test {
    useTestNG {
        suites 'src/test/resources/testng.xml'
    }
}

task testGroups(type: Test) {
    useTestNG {
        suites 'src/test/resources/testng-groups.xml'
    }
    if (project.hasProperty('browser')) {
        systemProperty("browser", "${browser}")
    }
    if (project.hasProperty('target')) {
        systemProperty("target", "${target}")
    }
    if (project.hasProperty("verifyUI")) {
        systemProperty("verifyUI", "${verifyUI}")
    }
    if (project.hasProperty("platform")) {
        systemProperty("platform", "${platform}")
    }
}

testGroups.doFirst {
    jvmArgs "-javaagent:${configurations.agent.singleFile}"
}

task testContacts(type: Test) {
    useTestNG {
        suites 'src/test/resources/testng-contacts.xml'
    }
    if (project.hasProperty('browser')) {
        systemProperty("browser", "${browser}")
    }
    if (project.hasProperty('target')) {
        systemProperty("target", "${target}")
    }
    if (project.hasProperty("verifyUI")) {
        systemProperty("verifyUI", "${verifyUI}")
    }
    if (project.hasProperty("platform")) {
        systemProperty("platform", "${platform}")
    }
}

task testDb(type: Test) {
    useTestNG {
        suites 'src/test/resources/testng.xml'
    }
}

task testHb(type: Test) {
    useTestNG {
        suites 'src/test/resources/testng-hb.xml'
    }
}

task rf(type: JavaExec) {
    main = 'org.robotframework.RobotFramework'
    classpath = sourceSets.test.runtimeClasspath
    args 'src/test/resources/rf'
}

task bdd(type: Test) {
    useTestNG {
        suites 'src/test/resources/testng-bdd.xml'
    }
}
